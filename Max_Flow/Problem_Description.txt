Problem 1: Write code to implement the Edmonds-Karp max-flow algorithm. You will be specified a network
G = (V; E; c) and vertices s; t (source and sink) as follows: The first line will be the number of vertices n. Vertices will
be numbered 1 through n. The next line will be the number of vertex s, a whitespace and then the number of vertex t.
The following lines will be the directed edges and their capacities in the format u v c|this means there is an edge (u; v)
whose capacity is the number c. The output should be the value of a max flow in the network from s to t. Also output
the edges crossing a min (s; t)-cut, i.e., if the min-(s; t)-cut is given by (A; B) where s 2 A; t 2 B; A [ B = V then output
all edges of the type (u; v) where u 2 A; v 2 B. Here is an example input:
4
1 4
1 2 1
1 3 1
2 3 1
2 4 1
3 4 1
One possible correct output is (a min-(s; t)-cut may not be unique):
2
(1,2)
(1,3)

Problem 2: A circulation with demands is defined as follows. You are given a network G = (V; E; c) (but
no source and sink vertices are specified). Apart from this you are given a number d(v) for each vertex v, which may
be positive, negative or zero|these are the \demands". A circulation with demands is an assignment of non-negative
numbers fuv on each edge u ! v (the flows) which satisfy the capacity constraits|i.e., fuv = cuv, and moreover for each
vertex v, the equation: (F low into v) - (F low out of v) = d(v) where d(v) is the demand of v. Here, ‘Flow into v’
is defined as P
u!v2E
fuv and flow out of v is defined as P
v!u2E
fuv. Write code given a network specified as follows, to
determine if there is a valid circulation with the given demands. The first line will be the number n of vertices. The
vertices are then numbered 1 through n. The next few lines will be of the type u v c, and such a line means there is an
edge u ! v with capacity c. The next few lines will be of the type u d where u is a vertex number and d is its demand
and they are separated by a whitespace. If a vertex number is not specified its demand is considered to be 0. The output
should be either a flow, i.e., lines of the form u v f meaning the flow on u ! v is f if there is a valid circulation with the
given demands, or else the word \NO" if it does not exist. Use the code developed in previous problem if you were ever
to compute a max-flow. An example input is as follows:
4
1 2 2
11 3 2
2 3 1
2 4 1
3 4 1
2 -2
4 2
A correct output is:
1 2 0
1 3 0
2 3 1
2 4 1
3 4 1